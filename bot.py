import logging
import re
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    CallbackContext,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
TOKEN = "8285946823:AAE6mT6BtJsOkTQFsP-IrBHonhtaUaJAg8g"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
MAIN_CHAT_ID = -4884863804  # ID –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —á–∞—Ç–∞ (–æ—Ç–∫—É–¥–∞ —É–¥–∞–ª—è—Ç—å)
LIST_CHAT_ID = -1002900105796  # ID —á–∞—Ç–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º (–≥–¥–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–º)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤ (–î–í–û–ô–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï)
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    handlers=[
        logging.FileHandler("bot.log", encoding='utf-8'),  # –ó–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª
        logging.StreamHandler()  # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
    ]
)
logger = logging.getLogger(__name__)

# –î–ª—è —É–¥–æ–±–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
def tail_logs():
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è —á—Ç–µ–Ω–∏—è –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"""
    with open('bot.log', 'r', encoding='utf-8') as log_file:
        log_file.seek(0, 2)  # –ü–µ—Ä–µ–º–µ—â–∞–µ–º—Å—è –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
        while True:
            line = log_file.readline()
            if not line:
                continue
            yield line.strip()

# NEW: –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è –ª–æ–≥–æ–≤
async def show_logs(update: Update, context: CallbackContext):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞"""
    try:
        with open('bot.log', 'r', encoding='utf-8') as f:
            lines = f.readlines()[-10:]
            await update.message.reply_text(f"üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:\n```\n{''.join(lines)}\n```", 
                                          parse_mode='Markdown')
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ª–æ–≥–æ–≤: {e}")

async def start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    await update.message.reply_text(
        "ü§ñ –ë–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–º –∑–∞–ø—É—â–µ–Ω!\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥"
    )
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /start")  # –ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥

# ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∫–æ–¥–∞ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞."""
    application = Application.builder().token(TOKEN).post_init(post_init).build()
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("check_reaction", check_reaction))
    application.add_handler(CommandHandler("logs", show_logs))  # NEW

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ —Å–æ —Å–ø–∏—Å–∫–æ–º
    application.add_handler(
        MessageHandler(
            filters.Chat(chat_id=LIST_CHAT_ID) & filters.TEXT,
            check_members
        )
    )

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logger.info("üü¢üü¢üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç –∫–æ–º–∞–Ω–¥...")
    application.run_polling()

if __name__ == "__main__":
    main()
