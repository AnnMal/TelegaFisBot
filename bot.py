import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = "8285946823:AAE6mT6BtJsOkTQFsP-IrBHonhtaUaJAg8g"
MAIN_CHAT_ID = -4884863804    # –ß–∞—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
LIST_CHAT_ID = -1002900105796 # –ß–∞—Ç –¥–ª—è –∫–æ–º–∞–Ω–¥

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

current_members = set()  # –•—Ä–∞–Ω–∏–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤

async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ", exc_info=context.error)
    if isinstance(update, Update):
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

async def set_members(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É"""
    try:
        global current_members
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∞—Ç–∞
        if update.message.chat.id != LIST_CHAT_ID:
            await update.message.reply_text("‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º —á–∞—Ç–µ")
            return
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
        if not context.args:
            await update.message.reply_text(
                "‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
                "/setmembers user1 user2 user3\n\n"
                "–ì–¥–µ user –º–æ–∂–µ—Ç –±—ã—Ç—å:\n"
                "- @username (–Ω–∞–ø—Ä–∏–º–µ—Ä @john)\n"
                "- user_id (–Ω–∞–ø—Ä–∏–º–µ—Ä 123456789)\n\n"
                "–ü—Ä–∏–º–µ—Ä:\n"
                "/setmembers @john 123456789 @alice"
            )
            return
            
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–∏—Å–∫–∞
        new_members = set()
        invalid_members = []
        
        for arg in context.args:
            arg = arg.strip().lower()
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ username (@username)
            if arg.startswith('@'):
                username = arg[1:]
                if len(username) >= 5 and username.replace('_', '').isalnum():
                    new_members.add(f"@{username}")
                else:
                    invalid_members.append(arg)
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ user_id (—Ü–∏—Ñ—Ä—ã)
            elif arg.isdigit() and len(arg) >= 5:
                new_members.add(arg)
            
            else:
                invalid_members.append(arg)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫
        current_members = new_members
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        response = [
            f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ ({len(current_members)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤):"
        ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º username —Å @ –∏ ID –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        response.extend(sorted(f"‚Ä¢ {m}" for m in current_members))
        
        if invalid_members:
            response.append("\n‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:")
            response.extend(f"√ó {m}" for m in invalid_members)
        
        await update.message.reply_text("\n".join(response))
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ set_members: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–ø–∏—Å–∫–∞")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    help_text = (
        "ü§ñ –ë–æ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ —á–∞—Ç–æ–≤\n\n"
        "üîπ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/setmembers - –∑–∞–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
        "/showmembers - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫\n\n"
        "üìù –§–æ—Ä–º–∞—Ç —Å–ø–∏—Å–∫–∞:\n"
        "/setmembers @username1 @username2 123456789\n\n"
        "‚ö†Ô∏è –í—Å–µ –∫–æ–º–∞–Ω–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º —á–∞—Ç–µ"
    )
    await update.message.reply_text(help_text)

async def show_members(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
    try:
        if not current_members:
            await update.message.reply_text("üì≠ –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø—É—Å—Ç")
            return
            
        response = [
            "üìã –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:",
            *sorted(f"‚Ä¢ {m}" for m in current_members),
            f"\n–í—Å–µ–≥–æ: {len(current_members)}"
        ]
        
        await update.message.reply_text("\n".join(response))
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ show_members: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞")

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    app = Application.builder().token(TOKEN).build()
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("setmembers", set_members))
    app.add_handler(CommandHandler("showmembers", show_members))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    app.add_error_handler(error_handler)
    
    logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
    app.run_polling()

if __name__ == "__main__":
    main()
