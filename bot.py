import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = "8285946823:AAE6mT6BtJsOkTQFsP-IrBHonhtaUaJAg8g"
MAIN_CHAT_ID = -4884863804  # –ß–∞—Ç, –æ—Ç–∫—É–¥–∞ –±—É–¥–µ–º —É–¥–∞–ª—è—Ç—å
LIST_CHAT_ID = -1002900105796  # –ß–∞—Ç —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

async def handle_list(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–ø–∏—Å–∫–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–∏—Ö"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –Ω—É–∂–Ω–æ–≥–æ —á–∞—Ç–∞
        if update.effective_chat.id != LIST_CHAT_ID:
            return

        text = update.message.text
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        if not text.startswith("–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏:"):
            await update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ù–∞—á–Ω–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏:'")
            return

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        lines = text.split('\n')
        actual_members = set()
        
        for line in lines[1:]:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É
            line = line.strip()
            if line:  # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –Ω–µ –ø—É—Å—Ç–∞—è
                actual_members.add(line.lower())  # –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —á–∞—Ç–∞
        chat_members = await context.bot.get_chat_administrators(MAIN_CHAT_ID)
        removed = []
        errors = []

        for member in chat_members:
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—è —á–∞—Ç–∞ –∏ —Å–∞–º–æ–≥–æ –±–æ—Ç–∞
            if member.status == 'creator' or member.user.is_bot:
                continue

            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            user_identifiers = [str(member.user.id)]
            if member.user.username:
                user_identifiers.append(f"@{member.user.username.lower()}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ
            if not any(ident in actual_members for ident in user_identifiers):
                try:
                    await context.bot.ban_chat_member(
                        chat_id=MAIN_CHAT_ID,
                        user_id=member.user.id
                    )
                    username = f"@{member.user.username}" if member.user.username else str(member.user.id)
                    removed.append(username)
                    logger.info(f"–£–¥–∞–ª—ë–Ω —É—á–∞—Å—Ç–Ω–∏–∫: {username}")
                except Exception as e:
                    errors.append(str(member.user.id))
                    logger.error(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {member.user.id}: {e}")

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á—ë—Ç
        report = []
        if removed:
            report.append(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ: {len(removed)}")
            report.append(", ".join(removed))
        else:
            report.append("ü§∑ –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
        
        if errors:
            report.append(f"‚ùå –û—à–∏–±–æ–∫: {len(errors)}")

        await update.message.reply_text("\n".join(report))

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}", exc_info=True)
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ")

async def start(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text(
        "ü§ñ –ë–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ —á–∞—Ç–∞\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ø–∏—Å–æ–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n"
        "–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏:\n"
        "@username1\n"
        "123456789\n"
        "@username2"
    )

async def check_rights(update: Update, context: CallbackContext):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –±–æ—Ç–∞ –≤ —Ü–µ–ª–µ–≤–æ–º —á–∞—Ç–µ"""
    try:
        chat = await context.bot.get_chat(MAIN_CHAT_ID)
        bot_member = await chat.get_member(context.bot.id)
        
        if bot_member.can_restrict_members:
            await update.message.reply_text("üõ°Ô∏è –ë–æ—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
        else:
            await update.message.reply_text("‚õî –ë–æ—Ç –ù–ï –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!")
    except Exception as e:
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤: {e}")

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    app = Application.builder().token(TOKEN).build()
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("rights", check_rights))
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
    app.add_handler(
        MessageHandler(
            filters.Chat(chat_id=LIST_CHAT_ID) & filters.TEXT,
            handle_list
        )
    )
    
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ...")
    app.run_polling()

if __name__ == "__main__":
    main()
